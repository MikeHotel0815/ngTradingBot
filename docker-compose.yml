services:
  postgres:
    image: postgres:15
    container_name: ngtradingbot_db
    env_file:
      - .env.telegram
    ports:
      - "9904:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ngtradingbot
      POSTGRES_USER: trader
      POSTGRES_PASSWORD: ${DB_PASSWORD:-tradingbot_secret_2025}
    networks:
      - tradingbot_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trader -d ngtradingbot"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: ngtradingbot_redis
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    networks:
      - tradingbot_network
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    build: .
    container_name: ngtradingbot_server
    env_file:
      - .env.telegram
    ports:
      - "9900:9900"
      - "9901:9901"
      - "9902:9902"
      - "9903:9903"
      - "9905:9905"
    volumes:
      - ./data:/app/data
      - ./backups:/app/backups
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql://trader:${DB_PASSWORD:-tradingbot_secret_2025}@postgres:5432/ngtradingbot
      - REDIS_URL=redis://redis:6379/0
      # Backup configuration
      - BACKUP_ENABLED=${BACKUP_ENABLED:-false}
      - BACKUP_INTERVAL_HOURS=${BACKUP_INTERVAL_HOURS:-24}
      - BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS:-30}
      - GITHUB_BACKUP_REPO=${GITHUB_BACKUP_REPO:-}
      - GITHUB_TOKEN=${GITHUB_TOKEN:-}
      - BACKUP_SCRIPT=/app/backup_to_github.sh
      - BACKUP_DIR=/app/backups
      # Telegram notifications
      - TELEGRAM_BOT_TOKEN=8454891267:AAHKrGTcGCVfXjb0LNjq6QAC816Un9ig7VA
      - TELEGRAM_CHAT_ID=557944459
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - tradingbot_network
    restart: unless-stopped

  # ============================================================================
  # UNIFIED WORKERS - All background workers in one container
  # Consolidates: decision_cleanup, news_fetch, trade_timeout, 
  #               strategy_validation, drawdown_protection, partial_close
  # Saves: ~250 MB RAM, faster deployment, easier maintenance
  # ============================================================================
  workers:
    build: .
    container_name: ngtradingbot_workers
    env_file:
      - .env.telegram
    command: python unified_workers.py
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql://trader:${DB_PASSWORD:-tradingbot_secret_2025}@postgres:5432/ngtradingbot
      - REDIS_URL=redis://redis:6379/0
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=ngtradingbot
      - DB_USER=trader
      - DB_PASSWORD=${DB_PASSWORD:-tradingbot_secret_2025}
      # Worker intervals (seconds)
      - CLEANUP_INTERVAL_SECONDS=${CLEANUP_INTERVAL_SECONDS:-3600}  # 1 hour
      - NEWS_FETCH_INTERVAL_SECONDS=${NEWS_FETCH_INTERVAL_SECONDS:-3600}  # 1 hour
      - TRADE_TIMEOUT_CHECK_INTERVAL=${TRADE_TIMEOUT_CHECK_INTERVAL:-300}  # 5 minutes
      - STRATEGY_VALIDATION_CHECK_INTERVAL=${STRATEGY_VALIDATION_CHECK_INTERVAL:-300}  # 5 minutes
      - DRAWDOWN_CHECK_INTERVAL=${DRAWDOWN_CHECK_INTERVAL:-60}  # 1 minute
      - PARTIAL_CLOSE_CHECK_INTERVAL=${PARTIAL_CLOSE_CHECK_INTERVAL:-60}  # 1 minute
      - AUTO_TRADER_CHECK_INTERVAL=${AUTO_TRADER_CHECK_INTERVAL:-60}  # 1 minute
      # Trade timeout settings
      - TRADE_TIMEOUT_HOURS=${TRADE_TIMEOUT_HOURS:-48}
      - TRADE_TIMEOUT_ENABLED=${TRADE_TIMEOUT_ENABLED:-true}
      - TRADE_TIMEOUT_ACTION=${TRADE_TIMEOUT_ACTION:-alert}
      # Strategy validation settings
      - STRATEGY_VALIDATION_ENABLED=${STRATEGY_VALIDATION_ENABLED:-true}
      - MIN_LOSS_TO_CHECK=${MIN_LOSS_TO_CHECK:--5.0}
      # Drawdown protection settings
      - DRAWDOWN_PROTECTION_ENABLED=${DRAWDOWN_PROTECTION_ENABLED:-true}
      - DAILY_LOSS_LIMIT=${DAILY_LOSS_LIMIT:--30.0}
      - DAILY_LOSS_WARNING=${DAILY_LOSS_WARNING:--20.0}
      - ACCOUNT_EMERGENCY_LIMIT=${ACCOUNT_EMERGENCY_LIMIT:--50.0}
      - MAX_POSITIONS_SAME_CURRENCY=${MAX_POSITIONS_SAME_CURRENCY:-2}
      - MAX_POSITIONS_PER_SYMBOL=${MAX_POSITIONS_PER_SYMBOL:-1}
      - MAX_TOTAL_OPEN_POSITIONS=${MAX_TOTAL_OPEN_POSITIONS:-5}
      # Partial close settings
      - PARTIAL_CLOSE_ENABLED=${PARTIAL_CLOSE_ENABLED:-true}
      - FIRST_PARTIAL_PERCENT=${FIRST_PARTIAL_PERCENT:-50.0}
      - FIRST_PARTIAL_CLOSE=${FIRST_PARTIAL_CLOSE:-0.50}
      - SECOND_PARTIAL_PERCENT=${SECOND_PARTIAL_PERCENT:-75.0}
      - SECOND_PARTIAL_CLOSE=${SECOND_PARTIAL_CLOSE:-0.25}
      - MIN_LOT_FOR_PARTIAL=${MIN_LOT_FOR_PARTIAL:-0.02}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - tradingbot_network
    restart: unless-stopped

volumes:
  pgdata:
  redisdata:

networks:
  tradingbot_network:
    driver: bridge
